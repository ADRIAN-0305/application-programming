using System;

// Base Account class
public class Account
{
    public string AccountNumber { get; set; }
    public string HolderName { get; set; }
    public double Balance { get; protected set; }

    public Account(string accountNumber, string holderName, double balance)
    {
        AccountNumber = accountNumber;
        HolderName = holderName;
        Balance = balance;
    }

    public virtual void Deposit(double amount)
    {
        Balance += amount;
        Console.WriteLine($"Deposited {amount}. New balance: {Balance}");
    }

    public virtual void CheckBalance()
    {
        Console.WriteLine($"Account: {AccountNumber}, Holder: {HolderName}, Balance: {Balance}");
    }

    public virtual void Withdraw(double amount)
    {
        Console.WriteLine("Withdraw method must be overridden.");
    }
}

// Savings Account
public class SavingsAccount : Account
{
    public double InterestRate { get; set; }

    public SavingsAccount(string accountNumber, string holderName, double balance, double interestRate)
        : base(accountNumber, holderName, balance)
    {
        InterestRate = interestRate;
    }

    public override void Withdraw(double amount)
    {
        if (amount <= Balance)
        {
            Balance -= amount;
            Console.WriteLine($"Withdrawn {amount}. New balance: {Balance}");
        }
        else
        {
            Console.WriteLine("Insufficient funds. Withdrawal denied.");
        }
    }

    public void ApplyInterest()
    {
        double interest = Balance * InterestRate / 100;
        Balance += interest;
        Console.WriteLine($"Interest of {interest} applied. New balance: {Balance}");
    }
}

// Current Account
public class CurrentAccount : Account
{
    public double OverdraftLimit { get; set; }

    public CurrentAccount(string accountNumber, string holderName, double balance, double overdraftLimit)
        : base(accountNumber, holderName, balance)
    {
        OverdraftLimit = overdraftLimit;
    }

    public override void Withdraw(double amount)
    {
        if (Balance - amount >= -OverdraftLimit)
        {
            Balance -= amount;
            Console.WriteLine($"Withdrawn {amount}. New balance: {Balance}");
        }
        else
        {
            Console.WriteLine("Overdraft limit exceeded. Withdrawal denied.");
        }
    }
}

// Main Program
public class Program
{
    public static void Main()
    {
        Console.WriteLine("Welcome to the Bank System!");
        Console.WriteLine("Choose account type:\n1. Savings Account\n2. Current Account");
        Console.Write("Enter your choice (1 or 2): ");
        string choice = Console.ReadLine();

        Console.Write("Enter Account Number: ");
        string accNum = Console.ReadLine();

        Console.Write("Enter Account Holder Name: ");
        string name = Console.ReadLine();

        Console.Write("Enter Initial Balance: ");
        double balance = double.Parse(Console.ReadLine());

        Account account = null;

        if (choice == "1")
        {
            Console.Write("Enter Interest Rate (%): ");
            double interestRate = double.Parse(Console.ReadLine());
            account = new SavingsAccount(accNum, name, balance, interestRate);
        }
        else if (choice == "2")
        {
            Console.Write("Enter Overdraft Limit: ");
            double overdraft = double.Parse(Console.ReadLine());
            account = new CurrentAccount(accNum, name, balance, overdraft);
        }
        else
        {
            Console.WriteLine("Invalid choice. Exiting...");
            return;
        }

        string action = "";
        do
        {
            Console.WriteLine("\nChoose an action:");
            Console.WriteLine("1. Deposit");
            Console.WriteLine("2. Withdraw");
            Console.WriteLine("3. Check Balance");
            if (account is SavingsAccount) Console.WriteLine("4. Apply Interest");
            Console.WriteLine("0. Exit");
            Console.Write("Enter your choice: ");
            action = Console.ReadLine();

            switch (action)
            {
                case "1":
                    Console.Write("Enter amount to deposit: ");
                    double dep = double.Parse(Console.ReadLine());
                    account.Deposit(dep);
                    break;

                case "2":
                    Console.Write("Enter amount to withdraw: ");
                    double with = double.Parse(Console.ReadLine());
                    account.Withdraw(with);
                    break;

                case "3":
                    account.CheckBalance();
                    break;

                case "4":
                    if (account is SavingsAccount sa)
                        sa.ApplyInterest();
                    else
                        Console.WriteLine("Invalid option for current account.");
                    break;

                case "0":
                    Console.WriteLine("Exiting program. Thank you!");
                    break;

                default:
                    Console.WriteLine("Invalid choice. Try again.");
                    break;
            }

        } while (action != "0");
    }
  
        
        
