using System;

// Base Account class
public class Account
{
    public string AccountNumber { get; set; }
    public string HolderName { get; set; }
    public double Balance { get; protected set; }

    public Account(string accountNumber, string holderName, double balance)
    {
        AccountNumber = accountNumber;
        HolderName = holderName;
        Balance = balance;
    }

    public virtual void Deposit(double amount)
    {
        Balance += amount;
        Console.WriteLine($"Deposited {amount}. New balance: {Balance}");
    }

    public virtual void CheckBalance()
    {
        Console.WriteLine($"Account: {AccountNumber}, Holder: {HolderName}, Balance: {Balance}");
    }

    public virtual void Withdraw(double amount)
    {
        Console.WriteLine("Withdraw method must be overridden.");
    }
}

// Savings Account
public class SavingsAccount : Account
{
    public double InterestRate { get; set; }

    public SavingsAccount(string accountNumber, string holderName, double balance, double interestRate)
        : base(accountNumber, holderName, balance)
    {
        InterestRate = interestRate;
    }

    public override void Withdraw(double amount)
    {
        if (amount <= Balance)
        {
            Balance -= amount;
            Console.WriteLine($"Withdrawn {amount}. New balance: {Balance}");
        }
        else
        {
            Console.WriteLine("Insufficient funds. Withdrawal denied.");
        }
    }

    public void ApplyInterest()
    {
        double interest = Balance * InterestRate / 100;
        Balance += interest;
        Console.WriteLine($"Interest of {interest} applied. New balance: {Balance}");
    }
}

// Current Account
public class CurrentAccount : Account
{
    public double OverdraftLimit { get; set; }

    public CurrentAccount(string accountNumber, string holderName, double balance, double overdraftLimit)
        : base(accountNumber, holderName, balance)
    {
        OverdraftLimit = overdraftLimit;
    }

    public override void Withdraw(double amount)
    {
        if (Balance - amount >= -OverdraftLimit)
        {
            Balance -= amount;
            Console.WriteLine($"Withdrawn {amount}. New balance: {Balance}");
        }
        else
        {
            Console.WriteLine("Overdraft limit exceeded. Withdrawal denied.");
        }
    }
}

// Example usage
public class Program
{
    public static void Main(string[] args)
    {
        SavingsAccount savings = new SavingsAccount("SA123", "Alice", 1000, 5);
        CurrentAccount current = new CurrentAccount("CA456", "Bob", 500, 200);

        savings.CheckBalance();
        savings.Deposit(200);
        savings.Withdraw(300);
        savings.ApplyInterest();

        Console.WriteLine();

        current.CheckBalance();
        current.Deposit(100);
        current.Withdraw(700);  // Allowed because of overdraft
        current.Withdraw(100);  // Exceeds overdraft
    }
}
